[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform vec2 tiled_factor = vec2(5., 5.);
uniform float aspect_ratio = 0.5;

uniform vec2 offset_scale = vec2(0.05, 0.05);

void fragment() {
	//COLOR = vec4(UV, 0.0, 1.0);
	//if (length(UV - vec2(0.5, 0.5)) > 0.5) {
	//	COLOR = vec4(0.)
	//}
	vec2 tiled_uvs = UV * tiled_factor;
	tiled_uvs.y *= aspect_ratio;
	COLOR = vec4(tiled_uvs, 0.0, 1.0);
	
	vec2 waves_uv_offset;
	waves_uv_offset.x = cos(TIME + (tiled_uvs.x + tiled_uvs.y) * offset_scale.x);
	waves_uv_offset.y = sin(TIME + (tiled_uvs.x + tiled_uvs.y) * offset_scale.y);
	
//	COLOR = vec4(waves_uv_offset, 0., 1.);
	COLOR = texture(TEXTURE, tiled_uvs + waves_uv_offset * 0.1);
	
	
	
	
}"
